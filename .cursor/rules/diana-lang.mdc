---
description: 
globs: 
alwaysApply: false
---
# Diana Monorepo Project Rules

## Monorepo Structure
- This project is a monorepo managed with pnpm workspaces.
- There are two main packages:
  - **Core Language Package**: `packages/diana-lang` (contains the core Diana language implementation)
  - **VSCode Extension Package**: `packages/vscode` (contains the VSCode extension for Diana)
- Each package contains its own `src/` and `test/` directories for source code and tests, respectively.
- The language specification and grammar are documented in the `doc/` directory (see `doc/grammar.md`).
- Core language-specific rules (e.g., tokenizer, parser) are defined in `.cursor/rules/diana-lang-core.mdc`.

## Naming Conventions
- Use `camelCase` for variables and function names.
- Use `PascalCase` for type and interface names.
- Use `UPPER_CASE` for constants.
- File names should be `kebab-case` (e.g., `tokenizer.ts`, `parser.ts`).
- Test files should be named as `<module>.test.ts` (e.g., `tokenizer.test.ts`).

## Testing
- Use Vitest for all tests.
- Each module in `src/` must have a corresponding test file in `test/`.
- Tests should cover edge cases, error handling, and typical usage.
- Run tests with `pnpm test` before submitting changes.

## General Best Practices
- Use pnpm for dependency management.
- Use TypeScript for all code and tests.
- All new features or changes should be accompanied by tests in the `test/` directory.
- Write clear, concise, and well-documented code.
- Prefer semicolon-less style throughout the project (see .oxlintrc.json).
- Place additional project rules in this directory as needed for future contributors.
